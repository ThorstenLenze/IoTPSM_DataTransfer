# -*-coding:utf-8-*-
# UDP Code
import socket, threading
import time
import binascii
import time
import string
import random
import uuid 
import datetime

HOST = "MYHOST"
PORT = MYPORT
#first 4 bytes are the delay in hex encoded (i.e. 0027 means 39 seconds)
DELAY = 0
BytesRamdomLength = 200

#berechne aus der Zahl "DEALY" einen HEX Wert und fülle ihn auf 4 Stellen auf
DELAY_hex = hex(DELAY)
DELAY_hex_4 = '%0*x' % (4,int(DELAY_hex, 16))
#erzeuge einen random hexstring in der Länge BytesRamdomLength
myrandom = uuid.uuid4().hex.upper()[0:BytesRamdomLength]
#füge den delay wert in hex und den randomstring zusammen
PAYLOAD = (str(DELAY_hex_4) + str(myrandom))
PAYLOAD = bytes(PAYLOAD, encoding='utf8')

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
print('Delay in dezimal is: ' + str(DELAY))
print('Delay in hex is: ' + str(DELAY_hex))
print('Delay in hex 4 bytest is: ' + str(DELAY_hex_4))
print('Random Length is: ' + str(BytesRamdomLength))
print('Random string is: ' + str(myrandom))
print('Payload is: ' + str(PAYLOAD))
print('Client started')
print('Client sending to IP: ' + str(HOST))
print('Client sending to port: ' + str(PORT))
dateTimeObj = int(time.time())*1000
dateTimeObjHumanReadable = datetime.datetime.now()
print("### Message send: " + str(dateTimeObj))
print("### Message sendtime: " + str(dateTimeObjHumanReadable))
s.sendto(PAYLOAD, (HOST, PORT))
data = s.recvfrom(4096)
dateTimeObj = int(time.time())*1000
dateTimeObjHumanReadable = datetime.datetime.now()
print("### Message received: " + str(dateTimeObj))
print("### Message receivetime: " + str(dateTimeObjHumanReadable))
s.close()

# -*-coding:utf-8-*-
# TCP Code
import socket, threading
import time
import binascii
import time
import string
import random
import uuid 
import datetime

HOST = "37.50.200.7"
HOST = "MYHOST"
PORT = 5005
PORT = MYPORT
#first 4 bytes (here 0027) are the delay in hex encoded (0027 means 39 seconds)
DELAY = MYDELAY
BytesRamdomLength = MYRANDOMLENGTH

#berechne aus der Zahl "DEALY" einen HEX Wert und fülle ihn auf 4 Stellen auf
DELAY_hex = hex(DELAY)
DELAY_hex_4 = '%0*x' % (4,int(DELAY_hex, 16))
#erzeuge einen random hexstring in der Länge BytesRamdomLength
myrandom = uuid.uuid4().hex.upper()[0:BytesRamdomLength]
#füge den delay wert in hex und den randomstring zusammen
PAYLOAD = (str(DELAY_hex_4) + str(myrandom))
PAYLOAD = bytes(PAYLOAD, encoding='utf8')


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print('Delay in dezimal is: ' + str(DELAY))
print('Delay in hex is: ' + str(DELAY_hex))
print('Delay in hex 4 bytest is: ' + str(DELAY_hex_4))
print('Random Length is: ' + str(BytesRamdomLength))
print('Random string is: ' + str(myrandom))
print('Payload is: ' + str(PAYLOAD))
print('Client started')
print('Client sending to IP: ' + str(HOST))
print('Client sending to port: ' + str(PORT))
s.connect((HOST, PORT))
dateTimeObj = int(time.time())*1000
dateTimeObjHumanReadable = datetime.datetime.now()
print("### Message send: " + str(dateTimeObj))
print("### Message sendtime: " + str(dateTimeObjHumanReadable))
s.sendall(PAYLOAD)
data = s.recv(4096)
dateTimeObj = int(time.time())*1000
dateTimeObjHumanReadable = datetime.datetime.now()
print("### Message received: " + str(dateTimeObj))
print("### Message receivetime: " + str(dateTimeObjHumanReadable))
s.close()
